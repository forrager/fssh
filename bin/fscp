#! /usr/bin/env ruby

# encoding: UTF-8

# Copyright 2012 Forrager
# http://www.apache.org/licenses/LICENSE-2.0

require 'rubygems' unless ENV["NO_RUBYGEMS"]
require 'fssh'

if ARGV[0] && ARGV[1]
  if ARGV[0].include?(":")
    remote_path = ARGV[0]
    local_path = ARGV[1]
    direction = :down
  else
    remote_path = ARGV[1]
    local_path = ARGV[0]
    direction = :up
  end

  server_name, remote_path = remote_path.split(":")
  cli = FSSH::CLI.new(server_name)
else
  puts "fscp must be given a remote path and a local path, eg: fscp hellfire:/tmp/file ~/Desktop"
  exit 1
end

unless cli.private_key_exists?
  puts "Could not find #{cli.config.local_private_key_file}"
  exit 1
end

puts " * Finding instances ..."
cli.find_instances

if cli.find_gateway
  puts " * Found gateway"
end

if cli.find_server
  puts " * Found #{cli.server_name}"
else
  puts " * Couldn't find server with name #{cli.server_name}"
  exit 1
end

command = if cli.hops.size == 1
  case direction
    when :down
      "scp -i #{cli.config.local_private_key_file} #{cli.config.username}@#{cli.hops.first.dns_name}:#{remote_path} #{local_path}"
    when :up
      "scp -i #{cli.config.local_private_key_file} #{local_path} #{cli.config.username}@#{cli.hops.first.dns_name}:#{remote_path}"
  end
else
  case direction
    when :down
      %Q(scp -i #{cli.config.local_private_key_file} -Cp -o "ProxyCommand ssh -i #{cli.config.local_private_key_file} #{cli.config.username}@#{cli.hops.first.dns_name} nc #{cli.hops[1].private_dns_name} 22" #{cli.config.username}@#{cli.hops[1].private_dns_name}:#{remote_path} #{local_path})
    when :up
      %Q(scp -i #{cli.config.local_private_key_file} -Cp -o "ProxyCommand ssh -i #{cli.config.local_private_key_file} #{cli.config.username}@#{cli.hops.first.dns_name} nc #{cli.hops[1].private_dns_name} 22" #{local_path} #{cli.config.username}@#{cli.hops[1].private_dns_name}:#{remote_path})
  end
end

puts " * Executing #{command}"
exec command
